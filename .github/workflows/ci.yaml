name: CI
on: [ push ]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '11' ]
    permissions:
      checks: write
      contents: write
    env:
      AWS_REGION: "eu-west-1"
      TESTCONTAINERS_RYUK_DISABLED: "true"
      CONTAINER_BUILDER: "buildx"
    steps:
      - uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'gradle'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Disable gradle daemon
        run: |
          mkdir -p ~/.gradle
          echo "org.gradle.daemon=false" >> ~/.gradle/gradle.properties

      - name: Determine effective branch
        id: git-meta
        run: |
          case "$( git branch --show-current )" in
          develop)
            EFFECTIVE_BRANCH_NAME="develop"
            ;;
          *)
            EFFECTIVE_BRANCH_NAME="main"
            ;;
          esac
          echo "::set-output name=branch::${EFFECTIVE_BRANCH_NAME}"

      - name: Test
        run: ./gradlew test --info --stacktrace

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.33
        with:
          files: "**/test-results/**/*.xml"
          comment_mode: off

      - name: Build distributions
        if: ${{ startsWith(github.ref, 'refs/tags/') || steps.git-meta.outputs.branch == 'develop' }}
        run: |
          chmod +x ./scripts/*.sh
          ./gradlew dist --info --stacktrace

      - name: Build Docker images
        if: ${{ (startsWith(github.ref, 'refs/tags/') || steps.git-meta.outputs.branch == 'develop') && matrix.java == '11' }}
        run: |
          IMAGE_TAG_NAME="$( ./scripts/branch-to-tag-name.sh ${{ steps.git-meta.outputs.branch }} )"

          case ${{ steps.git-meta.outputs.branch }} in
          develop)
            if [[ ! -z ${IMAGE_TAG_NAME} ]]; then
              ./scripts/docker-build.sh -p false "${IMAGE_TAG_NAME}"
            fi
            ;;

          main)
            CURRENT_VERSION="$( git describe --tags --exact-match )"
            if [[ "${CURRENT_VERSION:0:1}" == "v" ]]; then
              CURRENT_VERSION="$( echo ${CURRENT_VERSION} | cut -c 2- )"
            fi
            ./scripts/docker-build.sh -p false "${CURRENT_VERSION}"
            ./scripts/docker-build.sh -p false "latest"
            ;;
          esac

      - name: Integration test
        if: ${{ (startsWith(github.ref, 'refs/tags/') || steps.git-meta.outputs.branch == 'develop') && matrix.java == '11' }}
        run: |
          IMAGE_TAG_NAME="$( ./scripts/branch-to-tag-name.sh ${{ steps.git-meta.outputs.branch }} )"
          ./scripts/integration-tests.sh "${IMAGE_TAG_NAME}"

      - name: Push Docker images
        if: ${{ (startsWith(github.ref, 'refs/tags/') || steps.git-meta.outputs.branch == 'develop') && matrix.java == '11' }}
        run: |
          IMAGE_TAG_NAME="$( ./scripts/branch-to-tag-name.sh ${{ steps.git-meta.outputs.branch }} )"

          case ${{ steps.git-meta.outputs.branch }} in
          develop)
            if [[ ! -z ${IMAGE_TAG_NAME} ]]; then
              ./scripts/docker-build.sh -p true "${IMAGE_TAG_NAME}"
            fi
            ;;

          main)
            CURRENT_VERSION="$( git describe --tags --exact-match )"
            if [[ "${CURRENT_VERSION:0:1}" == "v" ]]; then
                CURRENT_VERSION="$( echo ${CURRENT_VERSION} | cut -c 2- )"
            fi
            ./scripts/docker-build.sh -p true "${CURRENT_VERSION}"
            ./scripts/docker-build.sh -p true "latest"
            ;;
          esac
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Release Java assets
        if: ${{ startsWith(github.ref, 'refs/tags/') && matrix.java == '11' }}
        uses: actions/github-script@v6
        with:
          script: |
            const script = require('./.github/github-release.js')
            await script({github, context}, [
              'main',
              './distro/awslambda/build/libs/imposter-awslambda.jar',
              './mock/hbase/build/libs/imposter-plugin-mock-hbase.jar',
              './mock/sfdc/build/libs/imposter-plugin-mock-sfdc.jar',
              './mock/soap/build/libs/imposter-plugin-mock-soap.jar',
              './scripting/nashorn-standalone/build/libs/imposter-plugin-js-nashorn-standalone.jar',
              './store/dynamodb/build/libs/imposter-plugin-store-dynamodb.jar',
              './store/redis/build/libs/imposter-plugin-store-redis.jar',
              './store/graphql/build/libs/imposter-plugin-store-graphql.jar',
            ])

      - name: Publish Java Maven artifacts
        if: ${{ (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/develop') && matrix.java == '11' }}
        run: ./gradlew publish --info --stacktrace
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
