apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'

compileJava {
    sourceCompatibility = JavaVersion.VERSION_11
}

dependencies {
    implementation project(':core:imposter-engine')

    pluginImplementation ('org.apache.xmlbeans:xmlbeans:5.0.3') {
        exclude module: 'log4j-api'
    }

    // test
    testImplementation project(':test:test-utils')
    testImplementation "com.jayway.restassured:rest-assured:$version_restassured"

    // java 11 compatibility
    testImplementation ("javax.xml.bind:jaxb-api:$version_jaxb_api")

    // sample client
    testImplementation project(':test:sample-soap-client')
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar

            repositories {
                maven {
                    url = version.endsWith('SNAPSHOT') ? mavenSnapshotRepository : mavenReleaseRepository
                    credentials(AwsCredentials) {
                        accessKey awsAccessKey
                        secretKey awsSecretKey
                    }
                }
            }
        }
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11

        // see https://kotlinlang.org/docs/java-to-kotlin-interop.html#default-methods-in-interfaces
        freeCompilerArgs = ["-Xjvm-default=all"]
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11

        // see https://kotlinlang.org/docs/java-to-kotlin-interop.html#default-methods-in-interfaces
        freeCompilerArgs = ["-Xjvm-default=all"]
    }
}

shadowJar {
    // override plugin archive name
    archiveBaseName.set("imposter-plugin-mock-soap")
    archiveVersion.set('')
    archiveClassifier.set('')
    configurations = [project.configurations.pluginImplementation]
}

task dist {
    dependsOn shadowJar
}
