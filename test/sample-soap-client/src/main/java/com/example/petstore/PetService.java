
package com.example.petstore;

import jakarta.xml.ws.*;

import javax.xml.namespace.QName;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "PetService", targetNamespace = "urn:com:example:petstore", wsdlLocation = "/petservice/service.wsdl")
public class PetService
    extends Service
{

    private final static URL PETSERVICE_WSDL_LOCATION;
    private final static WebServiceException PETSERVICE_EXCEPTION;
    private final static QName PETSERVICE_QNAME = new QName("urn:com:example:petstore", "PetService");

    static {
        PETSERVICE_WSDL_LOCATION = com.example.petstore.PetService.class.getResource("/petservice/service.wsdl");
        WebServiceException e = null;
        if (PETSERVICE_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find '/petservice/service.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        PETSERVICE_EXCEPTION = e;
    }

    public PetService() {
        super(__getWsdlLocation(), PETSERVICE_QNAME);
    }

    public PetService(WebServiceFeature... features) {
        super(__getWsdlLocation(), PETSERVICE_QNAME, features);
    }

    public PetService(URL wsdlLocation) {
        super(wsdlLocation, PETSERVICE_QNAME);
    }

    public PetService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, PETSERVICE_QNAME, features);
    }

    public PetService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PetService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns PetPortType
     */
    @WebEndpoint(name = "SoapEndpoint")
    public PetPortType getSoapEndpoint() {
        return super.getPort(new QName("urn:com:example:petstore", "SoapEndpoint"), PetPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PetPortType
     */
    @WebEndpoint(name = "SoapEndpoint")
    public PetPortType getSoapEndpoint(WebServiceFeature... features) {
        return super.getPort(new QName("urn:com:example:petstore", "SoapEndpoint"), PetPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (PETSERVICE_EXCEPTION!= null) {
            throw PETSERVICE_EXCEPTION;
        }
        return PETSERVICE_WSDL_LOCATION;
    }

}
