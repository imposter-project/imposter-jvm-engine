apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'maven-publish'

compileJava {
    sourceCompatibility = JavaVersion.VERSION_11
}

dependencies {
    implementation "io.vertx:vertx-core:$version_vertx"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "com.fasterxml.jackson.core:jackson-databind:$version_jackson_databind"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$version_junit_jupiter"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$version_junit_jupiter"
    testImplementation "org.mockito:mockito-core:$version_mockito"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$version_mockito_kotlin"
    testRuntimeOnly "org.apache.logging.log4j:log4j-core:$version_log4j"
    testRuntimeOnly "org.apache.logging.log4j:log4j-slf4j-impl:$version_log4j"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar

            repositories {
                maven {
                    url = version.endsWith('SNAPSHOT') ? mavenSnapshotRepository : mavenReleaseRepository
                    credentials(AwsCredentials) {
                        accessKey awsAccessKey
                        secretKey awsSecretKey
                    }
                }
            }
        }
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11

        // see https://kotlinlang.org/docs/java-to-kotlin-interop.html#default-methods-in-interfaces
        freeCompilerArgs = ["-Xjvm-default=all"]
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11

        // see https://kotlinlang.org/docs/java-to-kotlin-interop.html#default-methods-in-interfaces
        freeCompilerArgs = ["-Xjvm-default=all"]
    }
}

test {
    useJUnitPlatform()
}
